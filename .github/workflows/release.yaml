name: Release and Docker Build

on:
  push:
    tags:
      - 'v*'

env:
  ARTIFACT_VERSION: ${{ github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    needs: build_binaries

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Checksums
        id: upload-checksums
        run: |
          cd dist
          for file in *; do sha256sum "$file" > "$file.sha256"; done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*

      - name: Prepare Docker context
        run: |
          mkdir -p docker
          cp dist/dns-lookuper-${{ matrix.goos }}-${{ matrix.goarch }}* docker
          echo -e "FROM scratch\nCOPY myapp /myapp\nCMD [\"/myapp\"]" > docker/Dockerfile

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: docker
          push: true
          tags: |
            pabateman/dns-lookuper:latest
            pabateman/dns-lookuper:${{ github.ref }}
          platforms: ${{ matrix.goos }}/${{ matrix.goarch }}
